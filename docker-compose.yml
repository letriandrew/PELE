### PROD ###

# services:

#   db:
#     image: postgres
#     restart: always
#     env_file:
#       - .env
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres-data:/var/lib/postgresql/data  # for persistant data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
#       interval: 5s
#       timeout: 5s
#       retries: 5

#   backend:
#     build:
#       context: ./backend
#     ports:
#       - "8000:8000"
#     depends_on:
#       db: 
#         condition: service_healthy
#     env_file:
#       - .env 
#     command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]


#   frontend:
#     build:
#       context: ./frontend
#     ports:
#       - "3000:3000"
#     depends_on:
#       - backend

# volumes:
#   postgres-data:

### LOCAL ###

services:
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env 
    environment:
      - DATABASE_URL=sqlite:///./sqlite.db 
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]


  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend